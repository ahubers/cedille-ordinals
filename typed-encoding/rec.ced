import data.nat.

module rec.

-- Recursion over any type X, indexed by Nat.
-- You can think of this as generalized primitive recursion --
-- if you give me a base X and a step X ➔ X, I give you a
-- Nat ➔ X function.
rec : ∀ X: ★. X ➔ (X ➔ X) ➔ Nat ➔ X =
    Λ X. λ x. λ f. λ n.
    μ rec'. n {
      | zero ➔ x
      | succ n' ➔ f (rec' n')
}.

